-- target SQL instance & database 
:SETVAR SQLSERVER "BILL764\R2"
:SETVAR TARGETDB "target"                                                       
--test scripts file system location
:SETVAR SCRIPTPATH "C:\Users\bwunder\Documents\SQL Server Management Studio\Projects\data load methods\data load methods\"
:SETVAR TESTSCRIPT "SQLTestScript.sql" -- SQLTestScript.sql  SSISTestScript.sql 
-- these options may be changed again below 
:SETVAR STYLE "TVP"       -- Row    TVP 
:SETVAR METHOD "Merge"    -- Merge  Upsert                                      
:SETVAR LOCKTYPE "PAG"    -- ROW    PAG                           
:SETVAR ISOTYPE "VER"     -- VER    LCK                                         
:SETVAR LOOPDLOOP 1  -- repeat each concurrent load test loopdloop times        

/*select * from sysfiles
Rows generated per battery (194664 rows per exec of test script * 19 execuutions of script * 4 config changes)
LOADLOOP expected     Rows generated   Actual 
1         14,794,464                    14,993,600 
3         44,383,392
5         73,972,320
10       147,944,640
*/
GO
SET NOCOUNT ON;
GO
TRUNCATE TABLE $(TARGETDB).dbo.tChild;
DELETE $(TARGETDB).dbo.tParent;
GO
EXEC $(TARGETDB).dbo.pGetIndexDetails 'SAMPLED'
GO
:SETVAR CONCURRENTCOUNT 1                                                       
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR CONCURRENTCOUNT 3                                                    
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR CONCURRENTCOUNT 5                                                    
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR CONCURRENTCOUNT 10                                                    
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR LOCKTYPE "ROW"           -- ROW PAG TAB                              
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR CONCURRENTCOUNT 5                                                    
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR CONCURRENTCOUNT 3                                                    
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR CONCURRENTCOUNT 1                                                    
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR ISOTYPE "LCK"            -- VER LCK                                  
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR CONCURRENTCOUNT 3                                                    
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR CONCURRENTCOUNT 5                                                    
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR CONCURRENTCOUNT 10                                                    
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR LOCKTYPE "PAG"           -- ROW PAG TAB                              
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR CONCURRENTCOUNT 5                                                    
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR CONCURRENTCOUNT 3                                                    
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
:SETVAR CONCURRENTCOUNT 1                                                    
GO
:!!FOR /L %i IN (1,1,$(LOOPDLOOP)) DO Start SQLCMD -S$(SQLSERVER) -E -d$(TARGETDB) -i"$(SCRIPTPATH)$(STYLE).sql" -e -v LOADMETHOD="$(STYLE)$(METHOD)" TARGETDB="$(TARGETDB)"  SCRIPTPATH="$(SCRIPTPATH)" LOCKTYPE="$(LOCKTYPE)" ISOTYPE="$(ISOTYPE)" CONCURRENTCOUNT=$(CONCURRENTCOUNT) TESTSCRIPT="$(TESTSCRIPT)" 
GO
EXEC $(TARGETDB).dbo.pGetIndexDetails 'SAMPLED';
